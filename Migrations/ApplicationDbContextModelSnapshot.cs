// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ITInfo", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("integer");

                    b.Property<int>("OilCompanyid")
                        .HasColumnType("integer");

                    b.Property<string>("cms")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("externaljs")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("sociallinks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("ITInfos");
                });

            modelBuilder.Entity("WebApi.Models.OilCompany", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("industry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("OilCompanies");
                });

            modelBuilder.Entity("ITInfo", b =>
                {
                    b.HasOne("WebApi.Models.OilCompany", "OilCompany")
                        .WithOne("ITInfo")
                        .HasForeignKey("ITInfo", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OilCompany");
                });

            modelBuilder.Entity("WebApi.Models.OilCompany", b =>
                {
                    b.Navigation("ITInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
